{"/home/travis/build/npmtest/node-npmtest-postcss-cssnext/test.js":"/* istanbul instrument in package npmtest_postcss_cssnext */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/lib.npmtest_postcss_cssnext.js":"/* istanbul instrument in package npmtest_postcss_cssnext */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_postcss_cssnext = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_postcss_cssnext = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-postcss-cssnext && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_postcss_cssnext */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_postcss_cssnext\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_postcss_cssnext.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_postcss_cssnext.rollup.js'] =\n            local.assetsDict['/assets.npmtest_postcss_cssnext.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_postcss_cssnext.__dirname + '/lib.npmtest_postcss_cssnext.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/node_modules/postcss-cssnext/lib/index.js":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _caniuseApi = require(\"caniuse-api\");\n\nvar _features = require(\"./features\");\n\nvar _features2 = _interopRequireDefault(_features);\n\nvar _featuresActivationMap = require(\"./features-activation-map\");\n\nvar _featuresActivationMap2 = _interopRequireDefault(_featuresActivationMap);\n\nvar _warnForDuplicates = require(\"./warn-for-duplicates\");\n\nvar _warnForDuplicates2 = _interopRequireDefault(_warnForDuplicates);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar plugin = _postcss2.default.plugin(\"postcss-cssnext\", function (options) {\n  options = _extends({\n    console: console,\n    warnForDuplicates: true,\n    features: {}\n  }, options);\n\n  var features = options.features;\n\n  // propagate browsers option to plugins that supports it\n  var pluginsToPropagateBrowserOption = [\"autoprefixer\", \"rem\"];\n  pluginsToPropagateBrowserOption.forEach(function (name) {\n    var feature = features[name];\n\n    if (feature !== false) {\n      features[name] = _extends({\n        browsers: feature && feature.browsers ? feature.browsers : options.browsers\n      }, feature || {});\n    }\n  });\n\n  // autoprefixer doesn't like an \"undefined\" value. Related to coffee ?\n  if (features.autoprefixer && features.autoprefixer.browsers === undefined) {\n    delete features.autoprefixer.browsers;\n  }\n\n  var processor = (0, _postcss2.default)();\n\n  // features\n  Object.keys(_features2.default).forEach(function (key) {\n    // feature is auto enabled if: not disable && (enabled || no data yet ||\n    // !supported yet)\n    if (\n    // feature is not disabled\n    features[key] !== false && (\n    // feature is enabled\n    features[key] === true ||\n\n    // feature don't have any browsers data (yet)\n    _featuresActivationMap2.default[key] === undefined ||\n\n    // feature is not yet supported by the browsers scope\n    _featuresActivationMap2.default[key] && _featuresActivationMap2.default[key][0] && !(0, _caniuseApi.isSupported)(_featuresActivationMap2.default[key][0], options.browsers))) {\n      var _plugin = _features2.default[key](_typeof(features[key]) === \"object\" ? _extends({}, features[key]) : undefined);\n      processor.use(_plugin);\n    }\n  });\n\n  if (options.warnForDuplicates) {\n    processor.use((0, _warnForDuplicates2.default)({\n      keys: Object.keys(_features2.default),\n      console: options.console\n    }));\n  }\n\n  return processor;\n});\n\n// es5/6 support\nplugin.features = _features2.default;\n\nmodule.exports = plugin;","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/node_modules/postcss-cssnext/lib/features.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable max-len */\nexports.default = {\n  /**\n   * REMINDER:\n   * ******************\n   * order is important\n   * ******************\n   */\n  // https://npmjs.com/package/postcss-custom-properties\n  customProperties: function customProperties(options) {\n    return require(\"postcss-custom-properties\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-apply\n  applyRule: function applyRule(options) {\n    return require(\"postcss-apply\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-calc\n  calc: function calc(options) {\n    return require(\"postcss-calc\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-nesting\n  nesting: function nesting(options) {\n    return require(\"postcss-nesting\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-custom-media\n  customMedia: function customMedia(options) {\n    return require(\"postcss-custom-media\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-media-minmax\n  mediaQueriesRange: function mediaQueriesRange(options) {\n    return require(\"postcss-media-minmax\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-custom-selectors\n  customSelectors: function customSelectors(options) {\n    return require(\"postcss-custom-selectors\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-attribute-case-insensitive\n  attributeCaseInsensitive: function attributeCaseInsensitive(options) {\n    return require(\"postcss-attribute-case-insensitive\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-rebeccapurple\n  colorRebeccapurple: function colorRebeccapurple(options) {\n    return require(\"postcss-color-rebeccapurple\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-hwb\n  colorHwb: function colorHwb(options) {\n    return require(\"postcss-color-hwb\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-hsl\n  colorHsl: function colorHsl(options) {\n    return require(\"postcss-color-hsl\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-rgb\n  colorRgb: function colorRgb(options) {\n    return require(\"postcss-color-rgb\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-gray\n  colorGray: function colorGray(options) {\n    return require(\"postcss-color-gray\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-hex-alpha\n  colorHexAlpha: function colorHexAlpha(options) {\n    return require(\"postcss-color-hex-alpha\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-function\n  colorFunction: function colorFunction(options) {\n    return require(\"postcss-color-function\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-font-family-system-ui\n  fontFamilySystemUi: function fontFamilySystemUi(options) {\n    return require(\"postcss-font-family-system-ui\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-font-variant\n  fontVariant: function fontVariant(options) {\n    return require(\"postcss-font-variant\")(options);\n  },\n\n  // https://npmjs.com/package/pleeease-filters\n  filter: function filter(options) {\n    return require(\"pleeease-filters\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-initial\n  initial: function initial(options) {\n    return require(\"postcss-initial\")(options);\n  },\n\n  // https://npmjs.com/package/pixrem\n  rem: function rem(options) {\n    return require(\"pixrem\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-pseudoelements\n  pseudoElements: function pseudoElements(options) {\n    return require(\"postcss-pseudoelements\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-selector-matches\n  pseudoClassMatches: function pseudoClassMatches(options) {\n    return require(\"postcss-selector-matches\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-selector-not\n  pseudoClassNot: function pseudoClassNot(options) {\n    return require(\"postcss-selector-not\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-pseudo-class-any-link\n  pseudoClassAnyLink: function pseudoClassAnyLink(options) {\n    return require(\"postcss-pseudo-class-any-link\")(options);\n  },\n\n  // https://npmjs.com/package/postcss-color-rgba-fallback\n  colorRgba: function colorRgba(options) {\n    return require(\"postcss-color-rgba-fallback\")(options);\n  },\n\n  // https://www.npmjs.com/package/postcss-replace-overflow-wrap\n  overflowWrap: function overflowWrap(options) {\n    return require(\"postcss-replace-overflow-wrap\")(options);\n  },\n\n  // https://npmjs.com/package/autoprefixer\n  autoprefixer: function autoprefixer(options) {\n    return require(\"autoprefixer\")(options);\n  }\n};","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/node_modules/postcss-cssnext/lib/features-activation-map.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Some features might affect others (eg: var() in a calc()\n// in order to prevent issue, the map contains a sort of dependencies list\n//\n// null == always enable (& no caniuse data)\nexports.default = {\n  customProperties: [\"css-variables\"],\n  // applyRule: [ null ],\n  // calc() transformation only make sense with transformed custom properties,\n  // don't you think ?\n  // calc: [ null ],\n  // nesting: [ null ],\n  // @todo open PR on caniuse repo https://github.com/Fyrd/caniuse\n  // customMedia: [ null ],\n  // mediaQueriesRange: [ null ],\n  // customSelectors: [ null ],\n  attributeCaseInsensitive: [\"css-case-insensitive\"],\n  // @todo wait https://github.com/Fyrd/caniuse/issues/1271\n  // colorRebeccapurple: [ null ],\n  // colorHsl: [ null ],\n  // colorHwb: [ null ],\n  // colorRgb: [ null ],\n  // colorGray: [ null ],\n  colorHexAlpha: [\"css-rrggbbaa\"],\n  // colorFunction:[ null],\n  // fontVariant: [ null ],\n  // @todo can be done using a callback, this is only used for Firefox < 35\n  filter: [\"css-filters\"],\n  initial: [\"css-all\", \"css-initial-value\"],\n  rem: [\"rem\"],\n  pseudoElements: [\"css-gencontent\"],\n  pseudoClassMatches: [\"css-matches-pseudo\"],\n  pseudoClassNot: [\"css-not-sel-list\"],\n  // pseudoClassAnyLink: [ null ],\n  colorRgba: [\"css3-colors\"],\n  overflowWrap: [\"wordwrap\"]\n};","/home/travis/build/npmtest/node-npmtest-postcss-cssnext/node_modules/postcss-cssnext/lib/warn-for-duplicates.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spotted = undefined;\n\nvar _postcss = require(\"postcss\");\n\nvar _postcss2 = _interopRequireDefault(_postcss);\n\nvar _chalk = require(\"chalk\");\n\nvar _chalk2 = _interopRequireDefault(_chalk);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar msg = function msg(name) {\n  return \"Warning: postcss-cssnext found a duplicate plugin ('\" + name + \"') \" + \"in your postcss plugins. \" + (\"This might be inefficient. You should remove '\" + name + \"' from your \") + \"postcss plugin list since it's already included by postcss-cssnext.\";\n};\n\nvar shouldGlobalWarn = true;\nvar globalWarning = \"Note: If, for a really specific reason, postcss-cssnext warnings are \" + \"irrelevant for your use case, and you really know what you are doing, \" + \"you can disable this warnings by setting  'warnForDuplicates' option of \" + \"postcss-cssnext to 'false'.\";\nvar spotted = exports.spotted = [];\n\nvar warnForDuplicates = _postcss2.default.plugin(\"postcss-warn-for-duplicates\", function (options) {\n  return function (style, result) {\n    // https://github.com/postcss/postcss/issues/768\n    var keys = options.keys,\n        messenger = options.console;\n\n    var pluginNames = [];\n    result.processor.plugins.forEach(function (plugin) {\n      var name = plugin.postcssPlugin;\n      if (pluginNames.indexOf(name) > -1 &&\n      // warn for cssnext plugins only\n      keys.indexOf(name) > -1 &&\n      // show warning once\n      spotted.indexOf(name) === -1) {\n        messenger.log(_chalk2.default.yellow.bold(msg(name)));\n        spotted.push(name);\n      } else {\n        pluginNames.push(name);\n      }\n    });\n\n    if (spotted.length > 0 && shouldGlobalWarn) {\n      shouldGlobalWarn = false;\n      messenger.log(globalWarning);\n    }\n  };\n});\n\nexports.default = warnForDuplicates;"}